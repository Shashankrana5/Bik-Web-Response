on:
  push:
    branches: [ github-actions-setup ]
  pull_request:
    branches: [ main ]
# env:
#   DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
#   DOCKER_PASSWORD: ${{secrets.DOCKERHUB_TOKEN}}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      -name: Build docker image
        run: |
          docker compose up
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3
#       - name: Set up JDK 1.8
#         uses: actions/setup-java@v3
#         with:
#           java-version: '8.0'
#           distribution: 'temurin'
#       - name: Build with Maven
#         run: mvn clean install -Dmaven.test.skip=true
#       - name: docker build
#         run: docker build -t sudokuassembly .


#       # - name: Checkout
#       #   uses: actions/checkout@v2    

#       # - name: Setup AWS ECR Details
#       #   uses: aws-actions/configure-aws-credentials@v1
#       #   with:
#       #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#       #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#       #     aws-region: ${{secrets.AWS_REGION}}


#       # - name: Login to Amazon ECR
#       #   id: login-pf-aws-ecr
#       #   uses: aws-actions/amazon-ecr-login@v1

#       # - name: Build and push the tagged docker image to Amazon ECR
#       #   env:
#       #     ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
#       #     ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
#       #     IMAGE_TAG: latest
#       #   run: |
#       #     mvn clean install -Dmaven.test.skip=true
#       #     docker build . -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#       #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG




#       - name: Checkout Repository
#         uses: actions/checkout@v2

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us‑east‑2 // region you want to push the image to

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag, and push image to Amazon ECR 
#         id: build-image
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: "docker_nodejs_demo"
#           IMAGE_TAG: v1
#         run: |
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#           echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"